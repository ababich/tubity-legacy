require "bundler/capistrano"
set :bundle_flags, "--deployment --quiet --binstubs --shebang ruby"
set (:bundle_cmd) { "#{release_path}/bin/bundle" }

set (:whenever_command) { "#{bundle_cmd} exec whenever" }
require "whenever/capistrano"

set :application, "prod.tubity.com"
#set :repository, ""

#set :scm, ""
#set :scm_username, ""
#set :scm_password, ""
set :scm_verbose, true
#set :branch, "master"
set :deploy_via, :remote_cache

ssh_options[:forward_agent] = true

set :deploy_to, "/home/tubity.com"

role :db, application, primary: true
role :web, application # Your HTTP server, Apache/etc
role :app, application # This may be the same as your `Web` server

set :default_environment, {
        'PATH' => "$HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH"
}

set :default_run_options, {
        pty: true,
        env: {'RAILS_ENV' => 'production'}
}


def set_default(name, *args, &block)
  set(name, *args, &block) unless exists?(name)
end


# If you are using Passenger mod_rails uncomment this:
# if you're still using the script/reapear helper you will need
# these http://github.com/rails/irs_process_scripts

# namespace :deploy do
#   task :start do ; end
#   task :stop do ; end
#   task :restart, :roles => :app, :except => { :no_release => true } do
#     run "#{try_sudo} touch #{File.join(current_path,'tmp','restart.txt')}"
#   end
# end

set :user, "tubity"
set :use_sudo, false


namespace :deploy do
  desc "Use instead of deploy and skip incompatibilities"
  task :manual do
    deploy.update

    symlinks.logger_db
    deploy.manual_migrate

    assets.update

    nginx.reload
    unicorn.restart

    whenever.update_crontab
    clean.old_releases
  end

  task :manual_migrate do
    set :rake_invoke_task, "db:migrate"
    rake.invoke
  end

  task :enable_bins do
    run "cd #{latest_release}; /usr/bin/env chmod 755 bin/bundle"
  end
end
before "bundle:install", "deploy:enable_bins"

namespace :rake do
  desc "Run a task on a remote server"
  # run like: cap staging rake:invoke task=a_certain_task
  task :invoke do
    run "cd #{latest_release}; /usr/bin/env bin/bundle exec rake #{rake_invoke_task}"
  end
end

namespace :assets do
  desc 'Updates the stylesheets generated by Sass'
  task :update, roles: :app do
    set :rake_invoke_task, "assets:precompile"
    rake.invoke
  end
end

namespace :clean do
  desc 'Updates the stylesheets generated by Sass'
  task :old_releases, roles: :app do
    set :rake_invoke_task, "clean:old_releases"
    rake.invoke
  end
end

namespace :nginx do
  desc "Reload nginx conf"
  task :reload, roles: :web do
    sudo "nginx -s reload"
  end
end


namespace :unicorn do
  desc "Restart Unicorn"
  task :restart, roles: :app do
    sudo "/bin/kill -USR2 `/bin/cat #{shared_path + "/pids/unicorn.pid"}`"
  end
end

namespace :symlinks do
  task :logger_db, roles: :app do
    run "ln -nfs #{shared_path}/logger #{release_path}/db/logger"
  end
end